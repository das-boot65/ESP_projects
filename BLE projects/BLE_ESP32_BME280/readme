ESP32 BME280 Bluetooth LE Environmental Sensor
This project demonstrates how to use an ESP32 microcontroller with a BME280 sensor to create a Bluetooth Low Energy (BLE) environmental sensing device. The ESP32 reads temperature, humidity, and pressure data from the BME280 sensor and sends these values via BLE notifications to connected clients.

Prerequisites:
ESP32 development board
BME280 sensor
Arduino IDE with ESP32 board support
Adafruit BME280 library
ArduinoBLE library

Hardware Connections
BME280 Sensor to ESP32:
VCC to 3.3V
GND to GND
SCL to GPIO 22
SDA to GPIO 21

Installation
Clone the repository:
git clone https://github.com/das-boot65/ESP_projects.git
cd ESP_project

Install Arduino IDE (if not already installed):
Download and install the Arduino IDE from here.

Install ESP32 Board Support:

Open Arduino IDE.
Go to File > Preferences.
In the "Additional Board Manager URLs" field, add this URL:
arduino
Copy code
https://dl.espressif.com/dl/package_esp32_index.json
Go to Tools > Board > Board Manager.
Search for "ESP32" and click "Install".
Install Required Libraries:

Open Arduino IDE.
Go to Sketch > Include Library > Manage Libraries.
Search for and install the following libraries:
Adafruit BME280
Adafruit Unified Sensor
ArduinoBLE


Open the project in Arduino IDE:
File > Open > BLE projects/BLE_ESP32_BME280/BLE_ESP32_BME280.ino

Configure the BME280 sensor address:
Ensure the correct I2C address for the BME280 sensor is set in the code. The default address used is 0x76. If your sensor uses 0x77, update the bme.begin line accordingly in the initBME() function.


Upload the code:
Connect your ESP32 board to the computer.
Select the appropriate board and port from Tools > Board and Tools > Port.
Click the Upload button.
Monitor Serial Output:
Open the Serial Monitor from Tools > Serial Monitor to see the connection status and sensor readings.

Connect via BLE:
Use a BLE-compatible app on your smartphone (e.g., nRF Connect).
Scan for BLE devices and connect to the device named ESP32_BME280.
Subscribe to the characteristics to receive notifications for temperature, humidity, and pressure data.




